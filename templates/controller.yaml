apiVersion: v1
kind: ServiceAccount
metadata:
  name: getup-controller
  namespace: getup
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: getup-controller
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: getup-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: getup-controller
subjects:
- kind: ServiceAccount
  name: getup-controller
  namespace: getup
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: getup-controller
  namespace: getup
spec:
  replicas: 1
  selector:
    matchLabels:
      app: getup-controller
  template:
    metadata:
      labels:
        app: getup-controller
    spec:
      containers:
      - name: controller
        env:
        - name: GETUP_API_URL
          value: "http://api.getup.svc:8080"
        - name: GETUP_API_USERNAME
          value: ""
        - name: GETUP_API_PASSWORD
          value: ""
        image: getupcloud/getup-controller:v0.0.2
        imagePullPolicy: Always
        ports:
        - name: validator
          containerPort: 8443
          protocol: TCP
        - name: metrics
          containerPort: 8080
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 20Mi
        volumeMounts:
        - name: certs
          mountPath: /etc/tls
      serviceAccountName: getup-controller
      volumes:
      - name: certs
        secret:
          secretName: getup-controller-tls
---
apiVersion: v1
kind: Service
metadata:
  name: getup-controller
  namespace: getup
  annotations:
    service.alpha.openshift.io/serving-cert-secret-name: getup-controller-tls
  labels:
    app: getup-controller
spec:
  type: ClusterIP
  selector:
    app: getup-controller
  ports:
  - name: metrics
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: validator
    port: 443
    protocol: TCP
    targetPort: 8443
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: getup-controller
  annotations:
    certmanager.k8s.io/inject-ca-from: kube-system/containerset-controller
webhooks:
- name: project.controller.getup.io
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    resources:
    - namespace
    operations:
    - CREATE
    - UPDATE
  failurePolicy: Ignore
  clientConfig:
    service:
      name: getup-controller
      namespace: getup
      path: /project.controller.getup.io/v1/namespace/validate
    # TODO: populate caBunlde with output from:
    # $ oc -n getup rsh -c api  dc/api cat /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt | base64 -w0
    caBundle: ""
